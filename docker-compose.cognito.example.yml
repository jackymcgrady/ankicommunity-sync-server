version: '3.8'

services:
  anki-sync-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: anki-sync-server-cognito
    ports:
      - "27702:27702"
    environment:
      # AWS Cognito Configuration
      - ANKISYNCD_USER_MANAGER=ankisyncd.users.cognito_manager.CognitoUserManager
      - ANKISYNCD_COGNITO_USER_POOL_ID=your-user-pool-id
      - ANKISYNCD_COGNITO_CLIENT_ID=your-client-id
      - ANKISYNCD_COGNITO_CLIENT_SECRET=your-client-secret
      - ANKISYNCD_COGNITO_REGION=us-east-1
      
      # AWS Credentials
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_DEFAULT_REGION=us-east-1
      
      # Server Configuration
      - ANKISYNCD_HOST=0.0.0.0
      - ANKISYNCD_PORT=27702
      - ANKISYNCD_DATA_ROOT=/data/collections
      - ANKISYNCD_BASE_URL=/sync/
      - ANKISYNCD_BASE_MEDIA_URL=/msync/
      - ANKISYNCD_SESSION_DB_PATH=/data/session.db
      - ANKISYNCD_AUTH_DB_PATH=
    volumes:
      - ./data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27702/sync/hostKey"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  anki-https-proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: anki-https-proxy-cognito
    ports:
      - "80:80"
      - "443:27703"
    environment:
      - SYNC_SERVER_URL=http://anki-sync-server:27702
      - DOMAIN_NAME=your-domain.com
      - DOMAIN=your-domain.com
      - CERT_PATH=/app/certs/your-domain.com.crt
      - KEY_PATH=/app/certs/your-domain.com.key
    volumes:
      - ./certs:/app/certs:ro
    depends_on:
      - anki-sync-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/sync/hostKey"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  data:
    driver: local