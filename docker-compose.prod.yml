version: '3.8'

services:
  anki-sync-server:
    build: .
    container_name: anki-sync-server-prod
    volumes:
      # Collections storage - mount to persistent volume in production
      - ./data/collections:/app/collections
      # Configuration
      - ./src/ankisyncd.conf:/app/ankisyncd.conf:ro
    environment:
      - ANKISYNCD_DATA_ROOT=/app/collections
      - ANKISYNCD_AUTH_DB_PATH=/app/collections/auth.db
    ports:
      - "27702:27702"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27702/sync/hostKey"]
      interval: 30s
      timeout: 10s
      retries: 3

  anki-https-proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: anki-https-proxy-prod
    volumes:
      # Certificate storage - mount Let's Encrypt certificates
      - ./certs:/app/certs:ro
      # Let's Encrypt challenge directory
      - ./certbot/www:/var/www/certbot:ro
    environment:
      - ANKI_SYNC_SERVER_HOST=anki-sync-server
      - ANKI_SYNC_SERVER_PORT=27702
      - HTTPS_CERT_PATH=/app/certs
      - DOMAIN_NAME=${DOMAIN_NAME:-sync.ankipi.com}
    ports:
      - "27703:27703"
      - "80:80"  # For Let's Encrypt HTTP-01 challenge
    depends_on:
      - anki-sync-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:27703/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for automatic SSL certificate management
  certbot:
    image: certbot/certbot
    container_name: anki-certbot-prod
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certs:/app/certs
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-sync.ankipi.com}
    command: >
      sh -c "
        if [ ! -f /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem ]; then
          certbot certonly --webroot --webroot-path=/var/www/certbot 
          --email ${EMAIL:-admin@ankipi.com} --agree-tos --no-eff-email 
          -d ${DOMAIN_NAME}
        fi &&
        cp /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem /app/certs/${DOMAIN_NAME}.crt &&
        cp /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem /app/certs/${DOMAIN_NAME}.key &&
        echo 'Certificates copied successfully'
      "
    restart: "no"

volumes:
  collections_data:
    driver: local
  certs_data:
    driver: local 