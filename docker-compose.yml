

services:
  anki-sync-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: anki-sync-server-dev
    ports:
      - "27701:27702"  # Map to container's internal port 27702
    volumes:
      - ./src:/app/src
      - ./data:/data
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app/src
      - ANKISYNCD_CONFIG_PATH=/app/ankisyncd.conf
    restart: unless-stopped
    networks:
      - anki-network

  # HTTPS proxy for development (optional)
  anki-https-proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: anki-https-proxy-dev
    ports:
      - "27703:27703"  # HTTPS port
    volumes:
      - ./certs:/app/certs
      - ./https_proxy.py:/app/https_proxy.py
    environment:
      - ANKI_SERVER_HOST=anki-sync-server
      - ANKI_SERVER_PORT=27702
      - HTTPS_PORT=27703
    depends_on:
      - anki-sync-server
    restart: unless-stopped
    profiles:
      - https
    networks:
      - anki-network

  # Production build for testing
  anki-sync-server-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: anki-sync-server-prod
    ports:
      - "27704:27702"
    volumes:
      - ./data:/data
      - ./config:/app/config
    environment:
      - ANKISYNCD_CONFIG_PATH=/app/ankisyncd.conf
    restart: unless-stopped
    profiles:
      - production
    networks:
      - anki-network

  # HTTPS proxy for production testing
  anki-https-proxy-prod:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: anki-https-proxy-prod
    ports:
      - "27705:27703"  # HTTPS port for production
    volumes:
      - ./certs:/app/certs
    environment:
      - ANKI_SERVER_HOST=anki-sync-server-prod
      - ANKI_SERVER_PORT=27702
      - HTTPS_PORT=27703
    depends_on:
      - anki-sync-server-prod
    restart: unless-stopped
    profiles:
      - production
    networks:
      - anki-network

networks:
  anki-network:
    driver: bridge

volumes:
  data:
    driver: local
  config:
    driver: local 