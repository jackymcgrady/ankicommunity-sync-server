services:
  # Anki Sync Server with Cognito authentication
  anki-sync-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: anki-sync-server-nginx
    environment:
      # AWS Cognito Configuration
      - ANKISYNCD_USER_MANAGER=ankisyncd.users.cognito_manager.CognitoUserManager
      - ANKISYNCD_COGNITO_USER_POOL_ID=ap-southeast-1_aDQ1S4x28
      - ANKISYNCD_COGNITO_CLIENT_ID=39utiksk7tuap6md80uoicpdd4
      - ANKISYNCD_COGNITO_CLIENT_SECRET=h3e63ochjdd1mjmicqu8v3g7hlebf728cuvu6jgbf7h66dj4j2q
      - ANKISYNCD_COGNITO_REGION=ap-southeast-1
      
      # AWS Credentials
      - AWS_ACCESS_KEY_ID=AKIATIMJ4NYE3DN3MC3J
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_DEFAULT_REGION=ap-southeast-1
      
      # Server Configuration
      - ANKISYNCD_HOST=0.0.0.0
      - ANKISYNCD_PORT=27702
      - ANKISYNCD_DATA_ROOT=/data/collections
      - ANKISYNCD_BASE_URL=/sync/
      - ANKISYNCD_BASE_MEDIA_URL=/msync/
      - ANKISYNCD_SESSION_DB_PATH=/data/session.db
      - ANKISYNCD_AUTH_DB_PATH=
      
      # Python path for development
      - PYTHONPATH=/app/src
    volumes:
      - ./src:/app/src
      - ./data:/data
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:27702/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - anki-network

  # nginx reverse proxy with Let's Encrypt SSL
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: anki-nginx-proxy
    ports:
      - "80:80"    # HTTP (redirects to HTTPS)
      - "443:443"  # HTTPS
    volumes:
      # SSL certificates (Let's Encrypt)
      - ./letsencrypt:/etc/letsencrypt:rw
      # Web root for ACME challenge
      - ./certbot-www:/var/www/certbot:rw
      # nginx logs
      - ./logs/nginx:/var/log/nginx
    environment:
      - DOMAIN_NAME=sync.ankipi.com
    depends_on:
      - anki-sync-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - anki-network

  # Certbot for Let's Encrypt certificate management
  certbot:
    image: certbot/certbot
    container_name: anki-certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt:rw
      - ./certbot-www:/var/www/certbot:rw
      - ./logs/certbot:/var/log/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d sync.ankipi.com
    profiles:
      - certbot
    networks:
      - anki-network

networks:
  anki-network:
    driver: bridge

volumes:
  data:
    driver: local
  letsencrypt:
    driver: local
  certbot-www:
    driver: local