FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    ANKI_SERVER_HOST=anki-sync-server \
    ANKI_SERVER_PORT=27702 \
    HTTPS_PORT=27703

# Install system dependencies
RUN apt-get update && apt-get install -y \
    openssl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements-proxy.txt .
RUN pip install -r requirements-proxy.txt

# Copy HTTPS proxy
COPY https_proxy.py .

# Create certificates directory and generate self-signed cert if none exists
RUN mkdir -p /app/certs

# Create certificate generation script
RUN echo '#!/bin/bash\n\
if [ ! -f /app/certs/server.crt ] || [ ! -f /app/certs/server.key ]; then\n\
    echo "Generating self-signed certificate for HTTPS proxy..."\n\
    openssl req -x509 -newkey rsa:4096 -keyout /app/certs/server.key -out /app/certs/server.crt -days 365 -nodes -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"\n\
    chmod 600 /app/certs/server.key\n\
    chmod 644 /app/certs/server.crt\n\
    echo "Certificate generated successfully"\n\
fi\n\
exec python https_proxy.py' > /app/start_https_proxy.sh && chmod +x /app/start_https_proxy.sh

# Expose HTTPS port
EXPOSE 27703

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD python -c "import ssl, socket; ssl.create_default_context().wrap_socket(socket.socket()).connect(('localhost', 27703))" || exit 1

# Default command
CMD ["/app/start_https_proxy.sh"] 