[sync_app]
# change to 127.0.0.1 if you don't want the server to be accessible from the internet
host = 0.0.0.0
port = 27702
data_root = ./collections/users
base_url = /sync/
base_media_url = /msync/

# Authentication Configuration

# AWS Cognito Authentication (uses environment variables for production)
# Set these environment variables in production:
# ANKISYNCD_COGNITO_USER_POOL_ID=ap-southeast-1_O92soCD1L
# ANKISYNCD_COGNITO_CLIENT_ID=23qe2b547ejhleptku6uve7fh5  
# ANKISYNCD_COGNITO_REGION=ap-southeast-1

# Legacy SQLite Authentication (fallback for development)
auth_db_path = ./auth.db

# Note: For Cognito production deployment, set these environment variables:
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# Or use IAM roles if running on AWS

# optional, for session persistence between restarts
session_db_path = ./session.db

# optional, for overriding the default managers and wrappers
# # must inherit from ankisyncd.full_sync.FullSyncManager, e.g,
# full_sync_manager = great_stuff.postgres.PostgresFullSyncManager
# # must inherit from ankisyncd.session.SimpleSessionManager, e.g,
# session_manager = great_stuff.postgres.PostgresSessionManager
# # must inherit from ankisyncd.users.SimpleUserManager, e.g,
# user_manager = great_stuff.postgres.PostgresUserManager
# # must inherit from ankisyncd.collection.CollectionWrapper, e.g,
# collection_wrapper = great_stuff.postgres.PostgresCollectionWrapper

# AWS Cognito Configuration (uncomment to enable)
user_manager = ankisyncd.users.cognito_manager.CognitoUserManager
# cognito_user_pool_id = us-east-1_XXXXXXXXX
# cognito_client_id = your-client-id
# cognito_client_secret = your-client-secret
# cognito_region = us-east-1
