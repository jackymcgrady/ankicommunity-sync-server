# AWS Credentials - Set these environment variables
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=ap-southeast-1

# Cognito Configuration
ANKISYNCD_COGNITO_USER_POOL_ID=your_user_pool_id
ANKISYNCD_COGNITO_CLIENT_ID=your_client_id
ANKISYNCD_COGNITO_CLIENT_SECRET=your_client_secret
ANKISYNCD_COGNITO_REGION=ap-southeast-1

# Domain Configuration
DOMAIN_NAME=your-domain.com
EMAIL=your-email@example.com

# SSL Configuration
SSL_MODE=letsencrypt
# Options: self-signed (for development), letsencrypt (for production), existing (custom certs)

# Development Mode (enables HTTP endpoints for testing, disables HTTP/2)
DEV_MODE=false
# Set to true for local development with Anki clients that need HTTP/1.1

# Anki Sync Server Configuration
ANKISYNCD_HOST=0.0.0.0
ANKISYNCD_PORT=27702
ANKISYNCD_DATA_ROOT=/data/collections
ANKISYNCD_BASE_URL=/sync/
ANKISYNCD_BASE_MEDIA_URL=/msync/
ANKISYNCD_SESSION_DB_PATH=/data/session.db
ANKISYNCD_AUTH_DB_PATH=

# User Manager Configuration
ANKISYNCD_USER_MANAGER=ankisyncd.users.cognito_manager.CognitoUserManager

# Container Configuration
CONTAINER_USER_ID=1000
CONTAINER_GROUP_ID=1000

# Resource Limits
MEMORY_LIMIT=512M
CPU_LIMIT=1.0
MEMORY_RESERVATION=256M
CPU_RESERVATION=0.5

# Nginx Configuration
ANKI_SYNC_SERVER_HOST=anki-sync-server-nginx
ANKI_SYNC_SERVER_PORT=27702
MAX_BODY_SIZE=2G
PROXY_CONNECT_TIMEOUT=60s
PROXY_SEND_TIMEOUT=300s
PROXY_READ_TIMEOUT=300s

# Production Notes:
# - For production deployment, use SSL_MODE=letsencrypt and set your real domain
# - For development, use SSL_MODE=self-signed and DOMAIN_NAME=localhost
# - DEV_MODE=true enables HTTP sync endpoints and disables HTTP/2 for Anki client compatibility
# - Set appropriate resource limits in docker-compose.yml for your server capacity